<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.domain.Employee">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="admin" property="admin" jdbcType="BIT"/>
        <result column="d_id" property="dept.id"/>
        <result column="d_name" property="dept.name"/>
        <result column="d_sn" property="dept.sn"/>
        <!--property 员工的属性名称 select 要执行的sql column sql中需要的参数-->
        <collection property="roles" select="cn.wolfcode.mapper.RoleMapper.selectByEmpID" column="id"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from employee
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <delete id="deleteRelation">
        delete
        from employee_role
        where employee_id = #{eid}
    </delete>
    <delete id="batchDelect">
        delete
        from employee where id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>


    </delete>
    <insert id="insert" parameterType="cn.wolfcode.domain.Employee" useGeneratedKeys="true" keyProperty="id">
        insert into employee (name, password, email,
                              age, admin, deptId)
        values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR},
                #{age,jdbcType=INTEGER}, #{admin,jdbcType=BIT}, #{dept.id,jdbcType=BIGINT})
    </insert>
    <insert id="insertRelation">
        insert into employee_role(employee_id, role_id)
        values (#{eid}, #{rid})
    </insert>
    <insert id="insertRelation2">
        insert into employee_role(employee_id, role_id) values
        <foreach collection="ids" separator="," item="rid">
            (#{eid},#{rid})
        </foreach>
    </insert>
    <update id="updateByPrimaryKey" parameterType="cn.wolfcode.domain.Employee">
        update employee
        set name   = #{name,jdbcType=VARCHAR},
            email  = #{email,jdbcType=VARCHAR},
            age    = #{age,jdbcType=INTEGER},
            admin  = #{admin,jdbcType=BIT},
            deptId = #{dept.id,jdbcType=BIGINT}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select e.id,
               e.name,
               e.password,
               e.email,
               e.age,
               e.admin,
               e.deptId,
               d.id   AS d_id,
               d.name AS d_name,
               d.sn   as d_sn
        from employee e
                 left join department d on e.deptId = d.id
        where e.id = #{id}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id, name, password, email, age, admin, deptId
        from employee
    </select>

    <sql id="where_sql">
        <where>
            <if test="deptId != null and deptId != -1">
                and e.deptId = #{deptId}
            </if>
            <if test="keyword != null">
                and (e.name like concat('%',#{keyword},'%') or e.email like concat('%',#{keyword},'%'))
            </if>
        </where>
    </sql>

    <select id="selectForList" resultMap="BaseResultMap">
        select e.id, e.name, e.password, e.email, e.age, e.admin, e.deptId,
        d.id AS d_id, d.name AS d_name , d.sn as d_sn
        from employee e
        left join department d on e.deptId = d.id
        <include refid="where_sql"/>

    </select>
    <select id="selectByusernameAndPassword" resultType="cn.wolfcode.domain.Employee">
        select *
        from employee
        where name = #{username}
          and password = #{password}
    </select>
    <select id="selectByName" resultType="cn.wolfcode.domain.Employee">
        select id, name
        from employee
        where name = #{name}
    </select>
</mapper>